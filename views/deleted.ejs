<h2>–£–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 500)</h2>

<table class="tbl">
  <thead>
    <tr>
      <th>ID</th>
      <th>–ß–∞—Ç</th>
      <th>–ê–≤—Ç–æ—Ä</th>
      <th>–¢–∏–ø</th>
      <th>–¢–µ–∫—Å—Ç / –ú–µ–¥–∏–∞</th>
      <th>–í—Ä–µ–º—è</th>
	  <th>–î–µ–π—Å—Ç–≤–∏–µ</th>
    </tr>
  </thead>
  <tbody>
    <% rows.forEach(r => { %>
      <tr>
        <td><%= r.id %></td>
        <td><%= r.chat_id %></td>
        <td><%= r.author_id || '' %></td>
        <td><%= r.message_type %></td>
        <td>
          <% if (r.body && r.body.startsWith('[MEDIA:')) { 
               const pathMatch = r.body.match(/\[MEDIA:\s*(.*)\]/);
               const filePath = pathMatch ? pathMatch[1] : null;
               const fileName = filePath ? filePath.split(/[/\\]/).pop() : null;
               const ext = fileName ? fileName.split('.').pop().toLowerCase() : '';
          %>
              <% if (['jpg','jpeg','png','gif','webp'].includes(ext)) { %>
                <a href="/deleted_media/<%= fileName %>" target="_blank">
                  <img src="/deleted_media/<%= fileName %>" alt="deleted image" style="max-width:120px; max-height:120px; border-radius:6px;">
                </a>
              <% } else if (['mp4','mov','webm','avi'].includes(ext)) { %>
                <video src="/deleted_media/<%= fileName %>" controls style="max-width:200px; max-height:150px;"></video>
              <% } else { %>
                <a href="/deleted_media/<%= fileName %>" target="_blank">üìé –°–∫–∞—á–∞—Ç—å <%= fileName %></a>
              <% } %>
          <% } else { %>
              <pre><%= r.body || '' %></pre>
          <% } %>
        </td>
        <td><%= r.timestamp_ms ? new Date(r.timestamp_ms).toLocaleString() : '' %></td>
      
	  <td>
  <button class="del-btn" data-id="<%= r.id %>">–£–¥–∞–ª–∏—Ç—å</button>
</td>
	  </tr>
    <% }) %>
  </tbody>
</table>
<script>
document.querySelectorAll('.del-btn').forEach(btn => {
  btn.addEventListener('click', async () => {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª?')) return;
    const id = btn.dataset.id;
    const res = await fetch(`/deleted/delete/${id}`, { method: 'POST' });
    const data = await res.json();
    if (data.ok) {
      alert('–£–¥–∞–ª–µ–Ω–æ');
      location.reload();
    } else {
      alert('–û—à–∏–±–∫–∞: ' + data.error);
    }
  });
});
</script>
